@INPROCEEDINGS{9927507,
  author={Wu, Zhihong and Liu, Jinping and Shi, Shuaifei},
  booktitle={2022 IEEE 5th International Conference on Information Systems and Computer Aided Education (ICISCAE)},
  title={Research on Programming of 3D Simulation System under the Control of Computer Python Language},
  year={2022},
  volume={},
  number={},
  pages={918-922},
  abstract={312% Python is an alternative to ABC that provides an efficient high-level data architecture and handles object-oriented programming efficiently. The programming language of Python is usually relatively explicit and consistent, which makes the Python programming language easy to understand and easy to maintain. Python is a very common scripting language, especially suitable for software development in various languages. In this paper, Python software is used to numerically simulate the stress characteristic matrix method, and a set of characteristic matrix images for analyzing concrete structures is established. The purpose is to overcome the problems existing in the traditional convolutional neural network method in concrete. Through deep learning of image data, the results show that the simulated value generated by this software can well replace the actual value and achieve the expected purpose.},
  keywords={Solid modeling;Three-dimensional displays;Object oriented modeling;Computational modeling;Software;Data models;Virtual machining;computer;python language control;3D simulation;system programming},
  doi={10.1109/ICISCAE55891.2022.9927507},
  ISSN={2770-663X},
  month={Sep.},}@INPROCEEDINGS{9238231,
  author={Vasilev, Dimitar},
  booktitle={2020 XXIX International Scientific Conference Electronics (ET)},
  title={Python programming training with the robot Finch},
  year={2020},
  volume={},
  number={},
  pages={1-4},
  abstract={The article explores the possibility of the usage of the Finch robot in a Python programming training. The hardware and software of the mobile robotic platform Finch are considered and the possibilities for its application in programming training are studied. An example of how to control the Finch robot in the Python programming language is given.},
  keywords={Training;Writing;Software;Teamwork;Robots;Programming profession;Python;Educational robotics;robot Finch;programming language Python},
  doi={10.1109/ET50336.2020.9238231},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{7050621,
  author={Dobrescu, L.},
  booktitle={2014 International Symposium on Fundamentals of Electrical Engineering (ISFEE)},
  title={Replacing ANSI C with other modern programming languages},
  year={2014},
  volume={},
  number={},
  pages={1-4},
  abstract={Replacing ANSI C language with other modern programming languages such as Python or Java may be an actual debate topic in technical universities. Researchers whose primary interests are not in programming area seem to prefer modern and higher level languages. Keeping standard language ANSI C as a primary tool for engineers and for microcontrollers programming, robotics and data acquisition courses is another strong different opinion trend. Function oriented versus object oriented languages may be another highlighted topic in actual debates.},
  keywords={Java;Educational institutions;Programming profession;Microcontrollers;Syntactics;Computer languages;Software engineering;Programming environments;ANSI C;Python;Java},
  doi={10.1109/ISFEE.2014.7050621},
  ISSN={},
  month={Nov},}@INPROCEEDINGS{10184372,
  author={Kasyanov, Sergey and Fadeeva, Katerina},
  booktitle={2023 3rd International Conference on Technology Enhanced Learning in Higher Education (TELE)},
  title={Online Educational Community as a Platform for Online Teaching of Python Programming Language to Schoolchildren},
  year={2023},
  volume={},
  number={},
  pages={246-250},
  abstract={The issues of teaching schoolchildren of online communities programming in the Python environment using learning management systems (LMS) and Internet services: Google Docs and Google Colabratory are considered.},
  keywords={Training;Education;Sociology;Web and internet services;Psychology;Internet;Statistics;unified state exam in computer science and ICT;Python programming language;pair programming;online education;online community of school students;Google Internet services;Google Colabratory},
  doi={10.1109/TELE58910.2023.10184372},
  ISSN={},
  month={June},}@INPROCEEDINGS{9397812,
  author={Wang, Chaoyi and Vemula, Srikanth and Frye, Michael},
  booktitle={2020 IEEE Integrated STEM Education Conference (ISEC)},
  title={Out-of-school Time STEM: Teach Programming Using Python for High School Girls},
  year={2020},
  volume={},
  number={},
  pages={1-6},
  abstract={In the next decade, there is an enormous increase in job openings in the fields of science, technology, engineering, and mathematics (STEM). The early recognition of STEM talent is necessary to meet the demands of STEM labor force in the United States. Thus, it is essential for educators to apply diverse teaching methods to provide meaningful programming learning to students at High School level. In this study, the researchers designed an eight-session Python programming curriculum for high school girls and implemented in Girls in Engineering, Mathematics, Science (GEMS) STEAM program in San Antonio, Texas, USA. Through the analysis of pre- and post- surveys and interviews, the results showed that the Python programming course have created a fun and interesting learning environment. This eight-session course effectively expanded students' previous knowledge about programming and increase their interests in computer science (CS). In the process of learning, students developed the problem-solving skills. This study suggested that it is important for educators to create a fun and interactive learning environment when teaching programming for high school girls. There is a need of more efforts and opportunities which needs to be provided for girls to increase their participation in CS.},
  keywords={Education;Mathematics;Problem-solving;Interviews;Programming profession;Python;STEM;Computer Science;High school girls;Python programming course;STEM out-of-school program},
  doi={10.1109/ISEC49744.2020.9397812},
  ISSN={2330-331X},
  month={Aug},}@INPROCEEDINGS{7858549,
  author={Lyu, Ren-Yuan and Kuo, Yung-Hsin and Liu, Che-Ning},
  booktitle={2016 International Computer Symposium (ICS)},
  title={Machine Translation of English Identifiers in Python Programs into Traditional Chinese},
  year={2016},
  volume={},
  number={},
  pages={622-625},
  abstract={This paper aimed to automatically translating Python programs into traditional Chinese in order to help those who feel interested in learning computer programming but are not very good at English. The idea could also be helpful for those countries where English is not an official language in elementary or secondary schools. With a set of more than 70 English Python programs translated successfully, the current translated rate is about 62% out of 86% of Python identifiers found in these programs. A Tk-based GUI program is also provided to browse them conveniently. All source and translated programs were open to the public in Git Hub Web site.},
  keywords={Programming profession;Graphics;Education;Buildings;Computers;Graphical user interfaces;Chinese programming;Native language;Python;Programming education;Turtle Graphics;Translation of Programs in English/Chinese},
  doi={10.1109/ICS.2016.0127},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{9066334,
  author={Naumovic, Tamara and Despotovic-Zrakic, Marijana and Radenkovic, Bo≈æidar and Zivojinovic, Lazar and Jezdovic, Ivan},
  booktitle={2020 19th International Symposium INFOTEH-JAHORINA (INFOTEH)},
  title={Development of a Continuous System Simulation Engine in Python Programing Language},
  year={2020},
  volume={},
  number={},
  pages={1-5},
  abstract={This paper portrays the development of an simulation engine in Python programming language with focus on the continuous system simulation. Features of the engine are based on CSMP block-oriented language and software for continuous system simulation. The aim of the paper is threefold. Firstly, the paper describes the need and usage of such engine. Second goal is to analyze Python concepts used for the implementation of the simulation engine - API development, communication with smart systems, real-time data processing, integration of differential equations, threading and parallel programming. And last, this paper will depict the engine architecture, use cases and usage of the analyzed concepts in the development process. In the conclusion, we will discuss the overall outcome and the course of the future improvements and upgrades of the engine.},
  keywords={Engines;Computational modeling;Mathematical model;Continuous time systems;Python;Unified modeling language;continuous system simulation;python;engine;smart systems;IoT},
  doi={10.1109/INFOTEH48170.2020.9066334},
  ISSN={},
  month={March},}@INPROCEEDINGS{8944583,
  author={Narayanan, Ramachandran Trichur},
  booktitle={2019 10th International Conference on Computing, Communication and Networking Technologies (ICCCNT)},
  title={Novice Programmer to New-Age Application Developer: What Makes Python their First Choice?},
  year={2019},
  volume={},
  number={},
  pages={1-7},
  abstract={Novice programmers as well as analysts and domain experts associated with development of systems and applications in the new technology era have dilemmas in choosing the right programming language or tool. The issue assumes significance, especially, considering the block of time required to learn a new language or tool, understand its implementation techniques, and provide timely solutions to meet the client requirements. This paper examines why Python is most preferred for all such users.},
  keywords={Python;Programming profession;Tools;C++ languages;Syntactics;python;new age applications;programming language;choice of programming language},
  doi={10.1109/ICCCNT45670.2019.8944583},
  ISSN={},
  month={July},}@INPROCEEDINGS{10147530,
  author={Rosa, Aaron Paul M. Dela},
  booktitle={2023 8th International Conference on Business and Industrial Research (ICBIR)},
  title={Analyzing Programming Competency: A Student Perspective in Python Programming},
  year={2023},
  volume={},
  number={},
  pages={336-340},
  abstract={Computer programming is a skill that every information technology (IT) student must know and have. Computer programming is delivered using different programming languages. A programming language is a set of instructions to build computer programs. The College of Information and Communications Technology (CICT) of Bulacan State University (BulSU) offers different programming languages to its IT students from first- to fourth-year level. One of the languages students must take is Python programming. Python programming language is a scripting language used to develop web applications, data analytics, machine learning, and more. This study focuses on determining the students' programming competency in Python programming using a paired sample t-test. To deliver its objective, a concurrent triangulation design of mixed methods research was utilized to gather quantitative and qualitative data at the same time from fourth-year IT students of BulSU-CICT. Using paired sample ttests to calculate and interpret the quantitative data gathered, this study found that there is a significant difference between the before and after performance of the students in programming (P<0.00l), specifically in Python programming. Additionally, a manual analysis was delivered on the thoughts of the students upon completing the course. It is highlighted that students learned a lot, and their expectations were met after taking the course. From what this study discovered, course offerings of other programming languages may also be subjected to analyze the need for course syllabus revisions to fit what the student needs based on their performance and thoughts.},
  keywords={Data analysis;Design methodology;Machine learning;Information and communication technology;Programming profession;Python;Business;higher education;information technology;programming competency;programming languages;Python programming},
  doi={10.1109/ICBIR57571.2023.10147530},
  ISSN={},
  month={May},}@INPROCEEDINGS{9201735,
  author={Fang, Xiang},
  booktitle={2020 15th International Conference on Computer Science & Education (ICCSE)},
  title={The Teaching Innovation and Research of Python Programming in Financial and Economic Universities},
  year={2020},
  volume={},
  number={},
  pages={600-603},
  abstract={For the teaching status of Python Programming course in financial and economic colleges and universities, this paper analyzes the common shortcomings and proposes the reconstruction of the program design course from four aspects: teaching objectives, course contents, teaching methods and assessment methods. That is, under the teaching objectives and principles based on market demand, the teaching contents should be integrated, the practice teaching should be strengthened, multi-dimensional hybrid teaching methods and procedural assessment should be used for the purpose of stimulating students' interests, keeping high motivation. Finally, it can mobilize students' enthusiasm for independent learning, and cultivating their ability to solve complex professional problems with computational thinking.},
  keywords={Education;Python;Programming profession;Business;Economics;Artificial intelligence;Python programming language;teaching models;the new business;financial and economic universities},
  doi={10.1109/ICCSE49874.2020.9201735},
  ISSN={2473-9464},
  month={Aug},}@ARTICLE{6949505,
  author={DiSalvo, Betsy},
  journal={IEEE Computer Graphics and Applications},
  title={Graphical Qualities of Educational Technology: Using Drag-and-Drop and Text-Based Programs for Introductory Computer Science},
  year={2014},
  volume={34},
  number={6},
  pages={12-15},
  abstract={To determine appropriate computer science curricula, educators sought to better understand the different affordances of teaching with a visual programming language (Alice) or a text-based language (Jython). Although students often preferred one language, that language wasn't necessarily the one from which they learned the most.},
  keywords={Games;Education courses;Programming profession;Visualization;Programming;Computer languages;Computer science education;Glitch;Alice;Jython;programming languages;programming;computer graphics education;computer science education;computer graphics;graphics},
  doi={10.1109/MCG.2014.112},
  ISSN={1558-1756},
  month={Nov},}@INPROCEEDINGS{10336301,
  author={Otten, Joshua and Anastasopoulos, Antonios and Moran, Kevin},
  booktitle={2023 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
  title={Towards a Universal Python: Translating the Natural Modality of Python into Other Human Languages},
  year={2023},
  volume={},
  number={},
  pages={352-357},
  abstract={The Python programming language plays a large role in computer science today, both in industry and education. While the pseudo-code nature of its keywords and built-in functions/modules makes programming easy to learn for English speakers, non-English speakers do not have this advantage. Our goal is to further the democratization of computer science, allowing anyone to code in their native language, anywhere. This paper describes our vision for realizing this goal by automatically translating Python (keywords, error messages, identifiers) into other human languages, leveraging recent developments in machine translation and language technologies in general. As a first step, we introduce a preliminary multi-lingual Python tool that enables a user to code, translate, and execute Python in 5 additional languages, as well as a roadmap for the future development of our automated framework.},
  keywords={Industries;Software maintenance;Codes;Scalability;Education;Prototypes;Linguistics;programming languages;Python;democratization;machine translation;programming education},
  doi={10.1109/ICSME58846.2023.00044},
  ISSN={2576-3148},
  month={Oct},}@INPROCEEDINGS{8511780,
  author={Fernandes, Thiago R. and Fernandes, Leonardo R. and Ricciardi, Tiago R. and Ugarte, Luis F. and de Almeida, Madson C.},
  booktitle={2018 IEEE PES Transmission & Distribution Conference and Exhibition - Latin America (T&D-LA)},
  title={Python Programming Language for Power System Analysis Education and Research},
  year={2018},
  volume={},
  number={},
  pages={1-5},
  abstract={Due to its complexity and high dimensionality, power system analysis has always relied on numerical computation for real-time operation and planning. It is therefore of great importance that power systems engineering students have a robust understanding of computing and learn how to code. This paper discusses how Python can be an adequate programming language for education and research on power system analysis. This is accomplished by the analysis of a power transmission system from the perspectives of: (i) formation of bus admittance matrix, (ii) state estimation and (iii) fault studies. For each example, a simple vectorized Python 3 code, along with its basic concepts and functions highlighted, is presented. Additionally, the main results of interest are plotted to show the ability of Python in producing publication quality 2D and 3D plots.},
  keywords={Python;Voltage measurement;Power system stability;State estimation;Education;Admittance;Python;power system analysis;education;research;state estimation;fault studies},
  doi={10.1109/TDC-LA.2018.8511780},
  ISSN={2472-9639},
  month={Sep.},}@INPROCEEDINGS{8658891,
  author={Cabo, Candido},
  booktitle={2018 IEEE Frontiers in Education Conference (FIE)},
  title={Effectiveness of Flowcharting as a Scaffolding Tool to Learn Python},
  year={2018},
  volume={},
  number={},
  pages={1-7},
  abstract={This Research to Practice Full Paper evaluates the effectiveness of flowcharting as a scaffolding tool to learn a programming language like Python in the setting of an urban institution that serves mostly underrepresented minority students. We found that the abilities of students to solve problems using flowcharts is a good predictor of their ability to solve problems with Python (r-squared = 0.68). This means that the majority of students who perform well using flowcharts will perform well in Python. A majority of students found flowcharting easier than Python (63%), and reported that flowcharting helped them understand how to write programs in Python (73%). However, flowcharting is not a magic bullet for learning programming because about 31% of students have difficulty solving problems with a flowcharting tool (and Python). We also found that the ability of students to read code is not highly correlated with their ability to write code in Python. In conclusion: 1) For a majority of students flowcharting is an effective scaffolding tool to learn Python; 2) The ability to read and trace code is not predictive of the ability of students to solve problems and write viable programs in Python.},
  keywords={Python;Flowcharts;Programming profession;Tools;Problem-solving;Flowcharting, Python, program comprehension, program generation, novice programmers, computer science education},
  doi={10.1109/FIE.2018.8658891},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{10086928,
  author={Popov, Vladislav S.},
  booktitle={2023 5th International Youth Conference on Radio Electronics, Electrical and Power Engineering (REEPE)},
  title={Equivalence of logical operations and other operations in Python programming language},
  year={2023},
  volume={5},
  number={},
  pages={1-6},
  abstract={In most programming languages, there are logical operators "logical NOT", "logical AND", "logical OR". There are also logical bitwise operators "bitwise NOT", "bitwise AND", "bitwise OR", "bitwise XOR". This article discusses the possibility of using other non-logical operators (comparison, arithmetic, shift, identification) to replace and conveniently shorthand other logical functions or logical operators in binary logic in a programming language and, on the other hand, code obfuscation capabilities. The considered examples cover the basic operations of the Python programming language and can be used in other programming languages. The problems of using other operations as logical ones are covered. The article also provides truth tables for all unary and binary Boolean functions and corresponding non-logical functions, as well as the generally accepted names of unary and binary Boolean functions and operations put together.},
  keywords={Power engineering;Casting;Boolean functions;Codes;Logic gates;Python;Arithmetic;Boolean function;operator;programming operation;logical equivalences;truth table},
  doi={10.1109/REEPE57272.2023.10086928},
  ISSN={2831-7262},
  month={March},}@INPROCEEDINGS{9750637,
  author={Xu, Zhiqi and Shen, Xuewen and Lin, Shengyou and Zhang, Fan},
  booktitle={2021 11th International Conference on Information Technology in Medicine and Education (ITME)},
  title={Using Visualization to Teach an Introductory Programming Course with Python},
  year={2021},
  volume={},
  number={},
  pages={514-518},
  abstract={More and more colleges have offered introductory programming courses for students from different majors, aiming to cultivate students' computational thinking skills. However, teaching introductory programming courses, especially to freshmen, remains a challenging endeavor despite a lot of research and experiments. In this paper we presented our innovative teaching strategy and its implementation both with the utilization of visualization in an introductory Python programming course. The results from our comparative teaching experiments show that visualization could benefit students a lot in learning Python programming and improving their computational thinking abilities.},
  keywords={Visualization;Education;Information technology;Programming profession;Python;visual programming;collaborative learning;Python;computational thinking},
  doi={10.1109/ITME53901.2021.00109},
  ISSN={2474-3828},
  month={Nov},}@INPROCEEDINGS{9925955,
  author={Hlavat√Ω, Michal and Koz√°kov√°, Alena and Haffner, Oto},
  booktitle={2022 Cybernetics & Informatics (K&I)},
  title={Application for Python Programming Language Education Developed by Unity Engine},
  year={2022},
  volume={},
  number={},
  pages={1-6},
  abstract={Programming is not easy to learn or teach because different students need different explanations to understand such a complex concept. Traditional teaching methods and learning approaches are no longer appropriate for many kids. According to studies, such approaches impair students‚Äô motivation and interest in studying programming. According to research, games can help learn Python programming. The aim of this paper is to present our educational game that we developed in the Unity 3D game engine. The game focuses on pure basics of programming in Python language. Before and after completing the game the player has to fill out a survey that helped us analyze the project.},
  keywords={Graphics;Three-dimensional displays;Education;Games;Programming;Object oriented programming;Programming profession;programming;Python;game;education},
  doi={10.1109/KI55792.2022.9925955},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{7906784,
  author={Sarkar, Sanchita and Sarkar, Santu},
  booktitle={2016 IEEE Region 10 Humanitarian Technology Conference (R10-HTC)},
  title={A new approach to teach molecular biology in high school using Python},
  year={2016},
  volume={},
  number={},
  pages={1-5},
  abstract={Teachers' role in 21st century is undergoing a transition from the orthodox `chalk and talk' method to a student-centered, activity-based approach that maximizes students' active-learning opportunities and engages them to solve various problems. Teachers play an important role in today's technology-rich classrooms that significantly affect students' learning. For this reason it is time for the students, taking up biology in senior school, to realize that their responsibilities towards the subject have changed, since recent trends in information and communication are redefining biology and taking precedence over the traditional methods. The present study is designed to investigate the utility of Python programming language as a teaching material for high school students in learning biology. This paper also highlights the strengths in using Python Language in some selected topics of biology and establishes how there is a connection between student successes in learning biology with creative use of Python programs.},
  keywords={Computer languages;Programming;Training;Computers;Python Programming Language;Biology;High school students;constructivism},
  doi={10.1109/R10-HTC.2016.7906784},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{7126267,
  author={Lo, Chieh-An and Lin, Yu-Tzu and Wu, Cheng-Chih},
  booktitle={2015 International Conference on Learning and Teaching in Computing and Engineering},
  title={Which Programming Language Should Students Learn First? A Comparison of Java and Python},
  year={2015},
  volume={},
  number={},
  pages={225-226},
  abstract={Programming is a fundamental ability for Computer Science majors. Most programming lectures use traditional languages, such as C, C++, or Java, as the first learning language for novices, which are effective for designing real applications and therefore are popular in industry. However, the complex syntax of these languages is challenging for novices, which becomes an obstacle to novices' learning. Python has simpler syntax and high-level data structures to enable succinct programs. The multiple paradigms of Python also provide learners opportunities to learn various features of programming languages. Therefore, Python gradually becomes a new option of the first language for learning. This study investigates the features of the first learning programming language by comparing Python with the popular learning language Java. A questionnaire study will be conducted on both instructors and students to understand how the features of languages affect students' learning from the aspects of program translation and execution (interpretation vs. Compilation), variable declaration (dynamic vs. Static), the syntax of control structures, and the object-oriented syntaxes. For each aspect of questionnaire, questions are designed to understand whether and how the language features in this aspect influence program comprehension (including the occurrence of misconceptions or errors, and cognitive load) and program implementation. The research results will give instructors suggestions for selecting suitable learning languages in their lectures and designing adaptive instructional strategies/materials based on the features of the selected language.},
  keywords={Java;Syntactics;Programming profession;Education;Programming;Comprehension;Debugging;Spoken-Tutorials;Error Patterns;Mixed-method approach},
  doi={10.1109/LaTiCE.2015.15},
  ISSN={},
  month={April},}@INPROCEEDINGS{8875825,
  author={Sotomayor-Beltran, Carlos},
  booktitle={2019 IEEE World Conference on Engineering Education (EDUNINE)},
  title={First year undergraduate electronic engineering students from a Peruvian university learn to program with Python},
  year={2019},
  volume={},
  number={},
  pages={1-4},
  abstract={The programming language Python, due to its syntax, is nowadays considered to be the best choice to introduce students to programming. Therefore, during the first semester of the year 2018, an introductory course to programming with Python was given at the University of Sciences and Humanities in Lima, Peru. The course was targeted to first year undergraduate students from the professional school of electronic engineering of the aforementioned institution. In the following paper, the design and methods followed and used, respectively, throughout the course are discussed. Furthermore, the outlook of the students as well as the lessons gained by the professor on how to further improve this course for the coming semesters are reported.},
  keywords={Python;Libraries;Programming profession;Writing;Syntactics;Python;programming;higher education},
  doi={10.1109/EDUNINE.2019.8875825},
  ISSN={},
  month={March},}@INPROCEEDINGS{9944456,
  author={Zheng, Dan and Yang, Gang and Chen, Ji-Huan and Li, Jia-Wen and Zheng, Lei-Lei and Li, Xue-Liang},
  booktitle={2022 IEEE 2nd International Conference on Educational Technology (ICET)},
  title={Improving Students' Python Programming Abilities: An Instructional Method Based on Gap-Filling Flowchart Scaffolding},
  year={2022},
  volume={},
  number={},
  pages={203-207},
  abstract={In the future, it is expected that the demand for people with programming abilities will increase. Programming has become an ability that everyone needs to have, and it is also a part of the global basic curriculum. However, programming is difficult for junior high school students, so more study is needed to solve this problem. This study proposes programming learning methods based on the scaffolding theory based on different flowchart scaffoldings (gap-filling flowchart scaffolding, multiple-choice flowchart scaffolding) to cultivate students' programming abilities. Therefore, a Python course was designed and implemented in a middle school to explore the influence of students' programming abilities. During the 6-week teaching practice, a total of 96 students in two parallel classes were tested for programming abilities, and qualitative interviews were conducted with the students. The results show that (1) the gap-filling flowchart scaffolding is beneficial to improve students' programming comprehensive performance; (2) especially the improvement of programming skills is more significant.},
  keywords={Learning systems;Flowcharts;Educational technology;Interviews;Programming profession;Python;programming ability;flowchart scaffolding;Python},
  doi={10.1109/ICET55642.2022.9944456},
  ISSN={},
  month={June},}@INPROCEEDINGS{9498268,
  author={Shah, Meet and Shenoy, Rajat and Shankarmani, Radha},
  booktitle={2021 International Conference on Intelligent Technologies (CONIT)},
  title={Natural Language to Python Source Code using Transformers},
  year={2021},
  volume={},
  number={},
  pages={1-4},
  abstract={Writing code using natural language is a very exciting application of Neural Machine Translation. To achieve a small part of such an application, in this paper, we try to generate python source code snippets from natural English language descriptions using the Django dataset. We trained the self-attention based transformer architecture on the snippets from the dataset. We achieved a BLEU score of 64.29},
  keywords={Natural languages;Writing;Syntactics;Programming;Machine translation;Python;Transformers;tokenizers;Django;English;Python},
  doi={10.1109/CONIT51480.2021.9498268},
  ISSN={},
  month={June},}@INPROCEEDINGS{8468860,
  author={Guanghui, Zhao and Yanjun, Lyu and Yixiao, Tian and Zhaoxia, Wang and Chengming, Zou},
  booktitle={2018 13th International Conference on Computer Science & Education (ICCSE)},
  title={Case-Based Teaching Organization for Python Programming that Focuses on Skill Training},
  year={2018},
  volume={},
  number={},
  pages={1-5},
  abstract={In this paper, the method of Axis Flip was used in the teaching of Python programming. The focus of teaching is shift from coding knowledge to programming skills. After all, it is not how much of knowledge that you have learnt, but whether you grasp the programming skills that counts. In our teaching practice, a series of interesting cases has been designed. Programming courses has been well combined with their professional applications compared with the effect of traditional teaching method. Students' programming capability has been significantly improved, and they basically developed the skills to solve complex professional problems.},
  keywords={Programming profession;Python;Training;Organizations;Case-based Teaching;Python Programming;Skill Training;Axis Flip Teaching Method},
  doi={10.1109/ICCSE.2018.8468860},
  ISSN={2473-9464},
  month={Aug},}@INPROCEEDINGS{8085571,
  author={Kui, Xiaoyan and Liu, Weiguo and Xia, Jiazhi and Du, Huakun},
  booktitle={2017 12th International Conference on Computer Science and Education (ICCSE)},
  title={Research on the improvement of python language programming course teaching methods based on visualization},
  year={2017},
  volume={},
  number={},
  pages={639-644},
  abstract={Reform of teaching content, teaching methods and evaluation of examination system is an urgent issue of current teaching reform in higher education. The article discusses how to reform and optimize the teaching methods of Python language programming course based on visualization; students can change the learning method under the guidance of teachers, promote selfexploration, and form a proactive and personalized learning habit. The paper proposes the establishment of ‚Äúvisualization teaching mode‚Äù. By dynamically adjust the curriculum, scientifically plan teaching contents and efficiently use of the different teaching cases, teaching can better comply with the law of high education's development, and then effectively improve the quality of teaching and promote the development of higher education.},
  keywords={Data visualization;Programming profession;Visualization;Training;Tools;higher education;Python language programming course;teaching method;visualization},
  doi={10.1109/ICCSE.2017.8085571},
  ISSN={2473-9464},
  month={Aug},}@INPROCEEDINGS{6268052,
  author={Holvitie, Johannes and Rajala, Teemu and Haavisto, Riku and Kaila, Erkki and Laakso, Mikko-Jussi and Salakoski, Tapio},
  booktitle={2012 IEEE 12th International Conference on Advanced Learning Technologies},
  title={Breaking the Programming Language Barrier: Using Program Visualizations to Transfer Programming Knowledge in One Programming Language to Another},
  year={2012},
  volume={},
  number={},
  pages={116-120},
  abstract={The transition from one programming language to another is an issue, which usually needs to be addressed in programming curricula, as the learning is typically started with syntactically easier languages. This study explores the possibility to use a short interactive tutorial with visualization exercises to ease the transition from Python to Java. In the experiment, the students first took a pre-test to measure their earlier programming knowledge with Python. After that, they used the tutorial with visualization exercises for 45 minutes. The tutorial and the exercises were designed to underline the syntactical and structural differences between Python and Java. Finally, the students answered to post-test, which contained questions similar to pre-test, but in Java. The results indicate, that the students were able to obtain similar program comprehension skills in Java that they previously had with Python. Moreover, the students seem to think that using such tutorials is highly beneficial in the transition. Hence, we conclude, that ViLLE can be effectively used to ease the transition from one language to another.},
  keywords={Java;Tutorials;Visualization;Programming profession;Educational institutions;program visualization;language transition;programming education},
  doi={10.1109/ICALT.2012.186},
  ISSN={2161-377X},
  month={July},}